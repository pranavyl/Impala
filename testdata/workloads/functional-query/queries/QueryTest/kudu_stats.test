====
---- QUERY
create table simple (id int primary key, name string, valf float, vali bigint)
  partition by range (partition values < 10, partition 10 <= values < 30,
  partition 30 <= values) stored as kudu tblproperties('kudu.num_tablet_replicas' = '1')
---- RESULTS
'Table has been created.'
====
---- QUERY
# Tests the SHOW TABLE STATS output without stats computed
show table stats simple;
---- RESULTS
-1,3,regex:.*,'KUDU',regex:.*
---- TYPES
BIGINT,BIGINT,STRING,STRING,STRING
---- LABELS
#Rows,#Partitions,Size,Format,Location
====
---- QUERY
# Tests the SHOW TABLE STATS output after stats computed
compute stats simple;
show table stats simple;
---- RESULTS
0,3,regex:.*,'KUDU',regex:.*
---- TYPES
BIGINT,BIGINT,STRING,STRING,STRING
---- LABELS
#Rows,#Partitions,Size,Format,Location
====
---- QUERY
# Tests the SHOW PARTITIONS output
show partitions simple;
---- RESULTS
'','8000000A',regex:.*?:\d+,1
'8000000A','8000001E',regex:.*?:\d+,1
'8000001E','',regex:.*?:\d+,1
---- TYPES
STRING,STRING,STRING,INT
---- LABELS
Start Key,Stop Key,Leader Replica,#Replicas
====
---- QUERY
# IMPALA-3373: Computing stats on a Kudu table lead to duplicate columns shown for the
# table.
compute stats simple;
describe simple;
---- RESULTS
'id','int','','true','true','false','','AUTO_ENCODING','DEFAULT_COMPRESSION','0'
'name','string','','false','','true','','AUTO_ENCODING','DEFAULT_COMPRESSION','0'
'valf','float','','false','','true','','AUTO_ENCODING','DEFAULT_COMPRESSION','0'
'vali','bigint','','false','','true','','AUTO_ENCODING','DEFAULT_COMPRESSION','0'
---- TYPES
STRING,STRING,STRING,STRING,STRING,STRING,STRING,STRING,STRING,STRING
====
---- QUERY
# Create Kudu table with non unique primary key
create table non_unique_key_stats_test (a int, b string, non unique primary key(a))
  partition by range (partition values < 10, partition 10 <= values < 30,
  partition 30 <= values) stored as kudu tblproperties('kudu.num_tablet_replicas' = '1');
---- RESULTS
'Table has been created.'
====
---- QUERY
# Tests the SHOW TABLE STATS output without stats computed
show table stats non_unique_key_stats_test;
---- RESULTS
-1,3,regex:.*,'KUDU',regex:.*
---- TYPES
BIGINT,BIGINT,STRING,STRING,STRING
---- LABELS
#Rows,#Partitions,Size,Format,Location
====
---- QUERY
# Tests the SHOW TABLE STATS output after stats computed
compute stats non_unique_key_stats_test;
show table stats non_unique_key_stats_test;
---- RESULTS
0,3,regex:.*,'KUDU',regex:.*
---- TYPES
BIGINT,BIGINT,STRING,STRING,STRING
---- LABELS
#Rows,#Partitions,Size,Format,Location
====
---- QUERY
# Tests the SHOW PARTITIONS output
show partitions non_unique_key_stats_test;
---- RESULTS
'','8000000A',regex:.*?:\d+,1
'8000000A','8000001E',regex:.*?:\d+,1
'8000001E','',regex:.*?:\d+,1
---- TYPES
STRING,STRING,STRING,INT
---- LABELS
Start Key,Stop Key,Leader Replica,#Replicas
====
---- QUERY
compute stats non_unique_key_stats_test;
describe non_unique_key_stats_test;
---- RESULTS
'a','int','','true','false','false','','AUTO_ENCODING','DEFAULT_COMPRESSION','0'
'auto_incrementing_id','bigint','','true','false','false','','AUTO_ENCODING','DEFAULT_COMPRESSION','0'
'b','string','','false','','true','','AUTO_ENCODING','DEFAULT_COMPRESSION','0'
---- TYPES
STRING,STRING,STRING,STRING,STRING,STRING,STRING,STRING,STRING,STRING
====