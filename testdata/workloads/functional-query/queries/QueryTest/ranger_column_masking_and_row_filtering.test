====
---- QUERY
# Row-filtering policy keeps rows with "id % 3 = 0". Column-masking policies mask
# "id" to "id + 100", "string_col" to NULL, and redact column "date_string_col".
# Note that row filtering policies take effects prior to any column masking policies,
# because column masking policies apply on result data.
select id, bool_col, int_col, string_col, date_string_col, year, month
from functional.alltypestiny
---- RESULTS
100,true,0,'NULL','nn/nn/nn',2009,1
103,false,1,'NULL','nn/nn/nn',2009,2
106,true,0,'NULL','nn/nn/nn',2009,4
---- TYPES
INT,BOOLEAN,INT,STRING,STRING,INT,INT
====
---- QUERY
# Test on star select item
select * from functional.alltypestiny
---- RESULTS
100,true,0,0,0,0,0,0,'nn/nn/nn','NULL',2009-01-01 00:00:00,2009,1
103,false,1,1,1,10,1.100000023841858,10.1,'nn/nn/nn','NULL',2009-02-01 00:01:00,2009,2
106,true,0,0,0,0,0,0,'nn/nn/nn','NULL',2009-04-01 00:00:00,2009,4
---- TYPES
INT,BOOLEAN,TINYINT,SMALLINT,INT,BIGINT,FLOAT,DOUBLE,STRING,STRING,TIMESTAMP,INT,INT
====
---- QUERY
# Test on star select item with normal columns
select int_col, * from functional.alltypestiny
---- RESULTS
0,100,true,0,0,0,0,0,0,'nn/nn/nn','NULL',2009-01-01 00:00:00,2009,1
1,103,false,1,1,1,10,1.100000023841858,10.1,'nn/nn/nn','NULL',2009-02-01 00:01:00,2009,2
0,106,true,0,0,0,0,0,0,'nn/nn/nn','NULL',2009-04-01 00:00:00,2009,4
---- TYPES
INT,INT,BOOLEAN,TINYINT,SMALLINT,INT,BIGINT,FLOAT,DOUBLE,STRING,STRING,TIMESTAMP,INT,INT
====
---- QUERY
# Test on star select item with normal columns
select string_col, * from functional.alltypestiny
---- RESULTS
'NULL',100,true,0,0,0,0,0,0,'nn/nn/nn','NULL',2009-01-01 00:00:00,2009,1
'NULL',103,false,1,1,1,10,1.100000023841858,10.1,'nn/nn/nn','NULL',2009-02-01 00:01:00,2009,2
'NULL',106,true,0,0,0,0,0,0,'nn/nn/nn','NULL',2009-04-01 00:00:00,2009,4
---- TYPES
STRING,INT,BOOLEAN,TINYINT,SMALLINT,INT,BIGINT,FLOAT,DOUBLE,STRING,STRING,TIMESTAMP,INT,INT
====
---- QUERY
# Test on star select item with normal columns
select string_col, *, int_col from functional.alltypestiny
---- RESULTS
'NULL',100,true,0,0,0,0,0,0,'nn/nn/nn','NULL',2009-01-01 00:00:00,2009,1,0
'NULL',103,false,1,1,1,10,1.100000023841858,10.1,'nn/nn/nn','NULL',2009-02-01 00:01:00,2009,2,1
'NULL',106,true,0,0,0,0,0,0,'nn/nn/nn','NULL',2009-04-01 00:00:00,2009,4,0
---- TYPES
STRING,INT,BOOLEAN,TINYINT,SMALLINT,INT,BIGINT,FLOAT,DOUBLE,STRING,STRING,TIMESTAMP,INT,INT,INT
====
---- QUERY
# Column-masking policies of functional.alltypes mask "id" to "-id" and redact column
# "date_string_col". Row-filtering policy of functional.alltypes_view keeps rows with
# "id >= -8 and date_string_col = 'nn/nn/nn'". functional.alltypes_view is a view based
# on table functional.alltypes, so column masking policies were applied to 'alltypes'
# before the row-filter policies are applied to 'alltypes_view'.
select id, bool_col, date_string_col, year, month from functional.alltypes_view
---- RESULTS
0,true,'nn/nn/nn',2009,1
-1,false,'nn/nn/nn',2009,1
-2,true,'nn/nn/nn',2009,1
-3,false,'nn/nn/nn',2009,1
-4,true,'nn/nn/nn',2009,1
-5,false,'nn/nn/nn',2009,1
-6,true,'nn/nn/nn',2009,1
-7,false,'nn/nn/nn',2009,1
-8,true,'nn/nn/nn',2009,1
---- TYPES
INT,BOOLEAN,STRING,INT,INT
====
---- QUERY
# Test on star select item with normal columns
select int_col, * from functional.alltypes_view
---- RESULTS
0,0,true,0,0,0,0,0.0,0.0,'nn/nn/nn','0',2009-01-01 00:00:00,2009,1
1,-1,false,1,1,1,10,1.10000002384,10.1,'nn/nn/nn','1',2009-01-01 00:01:00,2009,1
2,-2,true,2,2,2,20,2.20000004768,20.2,'nn/nn/nn','2',2009-01-01 00:02:00.100000000,2009,1
3,-3,false,3,3,3,30,3.29999995232,30.3,'nn/nn/nn','3',2009-01-01 00:03:00.300000000,2009,1
4,-4,true,4,4,4,40,4.40000009537,40.4,'nn/nn/nn','4',2009-01-01 00:04:00.600000000,2009,1
5,-5,false,5,5,5,50,5.5,50.5,'nn/nn/nn','5',2009-01-01 00:05:00.100000000,2009,1
6,-6,true,6,6,6,60,6.59999990463,60.6,'nn/nn/nn','6',2009-01-01 00:06:00.150000000,2009,1
7,-7,false,7,7,7,70,7.69999980927,70.7,'nn/nn/nn','7',2009-01-01 00:07:00.210000000,2009,1
8,-8,true,8,8,8,80,8.80000019073,80.8,'nn/nn/nn','8',2009-01-01 00:08:00.280000000,2009,1
---- TYPES
INT,INT,BOOLEAN,TINYINT,SMALLINT,INT,BIGINT,FLOAT,DOUBLE,STRING,STRING,TIMESTAMP,INT,INT
====
---- QUERY
# Test on star select item with normal columns
select string_col, * from functional.alltypes_view
---- RESULTS
'0',0,true,0,0,0,0,0.0,0.0,'nn/nn/nn','0',2009-01-01 00:00:00,2009,1
'1',-1,false,1,1,1,10,1.10000002384,10.1,'nn/nn/nn','1',2009-01-01 00:01:00,2009,1
'2',-2,true,2,2,2,20,2.20000004768,20.2,'nn/nn/nn','2',2009-01-01 00:02:00.100000000,2009,1
'3',-3,false,3,3,3,30,3.29999995232,30.3,'nn/nn/nn','3',2009-01-01 00:03:00.300000000,2009,1
'4',-4,true,4,4,4,40,4.40000009537,40.4,'nn/nn/nn','4',2009-01-01 00:04:00.600000000,2009,1
'5',-5,false,5,5,5,50,5.5,50.5,'nn/nn/nn','5',2009-01-01 00:05:00.100000000,2009,1
'6',-6,true,6,6,6,60,6.59999990463,60.6,'nn/nn/nn','6',2009-01-01 00:06:00.150000000,2009,1
'7',-7,false,7,7,7,70,7.69999980927,70.7,'nn/nn/nn','7',2009-01-01 00:07:00.210000000,2009,1
'8',-8,true,8,8,8,80,8.80000019073,80.8,'nn/nn/nn','8',2009-01-01 00:08:00.280000000,2009,1
---- TYPES
STRING,INT,BOOLEAN,TINYINT,SMALLINT,INT,BIGINT,FLOAT,DOUBLE,STRING,STRING,TIMESTAMP,INT,INT
====
---- QUERY
# Test on star select item with normal columns
select string_col, *, int_col from functional.alltypes_view
---- RESULTS
'0',0,true,0,0,0,0,0.0,0.0,'nn/nn/nn','0',2009-01-01 00:00:00,2009,1,0
'1',-1,false,1,1,1,10,1.10000002384,10.1,'nn/nn/nn','1',2009-01-01 00:01:00,2009,1,1
'2',-2,true,2,2,2,20,2.20000004768,20.2,'nn/nn/nn','2',2009-01-01 00:02:00.100000000,2009,1,2
'3',-3,false,3,3,3,30,3.29999995232,30.3,'nn/nn/nn','3',2009-01-01 00:03:00.300000000,2009,1,3
'4',-4,true,4,4,4,40,4.40000009537,40.4,'nn/nn/nn','4',2009-01-01 00:04:00.600000000,2009,1,4
'5',-5,false,5,5,5,50,5.5,50.5,'nn/nn/nn','5',2009-01-01 00:05:00.100000000,2009,1,5
'6',-6,true,6,6,6,60,6.59999990463,60.6,'nn/nn/nn','6',2009-01-01 00:06:00.150000000,2009,1,6
'7',-7,false,7,7,7,70,7.69999980927,70.7,'nn/nn/nn','7',2009-01-01 00:07:00.210000000,2009,1,7
'8',-8,true,8,8,8,80,8.80000019073,80.8,'nn/nn/nn','8',2009-01-01 00:08:00.280000000,2009,1,8
---- TYPES
STRING,INT,BOOLEAN,TINYINT,SMALLINT,INT,BIGINT,FLOAT,DOUBLE,STRING,STRING,TIMESTAMP,INT,INT,INT
====
---- QUERY
# Test with expr rewrite rules.
select id, bool_col, string_col,
  if (id <=> id, 0, 1),
  case when bool_col <=> bool_col then 0 when true then 1 end,
  coalesce(string_col, '0')
from functional.alltypestiny
---- RESULTS
100,true,'NULL',0,0,'0'
103,false,'NULL',0,0,'0'
106,true,'NULL',0,0,'0'
---- TYPES
INT,BOOLEAN,STRING,TINYINT,TINYINT,STRING
====
---- QUERY
# Test with statement rewrite rules on uncorrelated subquery.
select a.id, a.int_col, a.string_col from functional_orc_def.alltypes a
where a.id in (select id from functional.alltypestiny where bool_col = true)
and a.id < 103
---- RESULTS
100,0,'0'
---- TYPES
INT,INT,STRING
====
---- QUERY
# Test with statement rewrite rules on correlated subquery.
select id, int_col from functional.alltypesagg a
where int_col in
  (select id from functional.alltypestiny t where a.id = t.id)
---- RESULTS
100,100
100,100
103,103
106,106
---- TYPES
INT,INT
====
---- QUERY
# IMPALA-10554: Updates on masked tables should be blocked.
insert into functional.alltypestiny partition(year, month) select * from functional.alltypes
---- CATCH
AuthorizationException: User '$USER' does not have privileges to execute 'INSERT' on: functional.alltypestiny
====
---- QUERY
# IMPALA-10554: Updates on masked tables should be blocked.
truncate table functional.alltypestiny
---- CATCH
AuthorizationException: User '$USER' does not have privileges to execute 'INSERT' on: functional.alltypestiny
====
---- QUERY
# IMPALA-10554: Updates on masked tables should be blocked.
compute stats functional.alltypestiny
---- CATCH
AuthorizationException: User '$USER' does not have privileges to execute 'ALTER' on: functional.alltypestiny
====
