====
---- QUERY
# Test that kudu equal predicate with timestamps can be correctly pushed down in the local
# time. '2011-03-13 02:00:00' is invalid in timezone America/Los_Angeles, so the total
# RowsRead should be 0.
select count(*) from timestamp_at_dst_changes where ts = '2011-03-13 02:00:00';
---- TYPES
BIGINT
---- RESULTS
0
---- RUNTIME_PROFILE
aggregation(SUM, RowsRead): 0
====
---- QUERY
# Test that kudu equal predicate with timestamps can be correctly pushed down in the local
# time. '2011-11-06 01:00:00' is repeated in timezone America/Los_Angeles, so the total
# RowsRead should be 2 (2011-11-06 08:00:00 and 09:00:00 in UTC).
select * from timestamp_at_dst_changes where ts = '2011-11-06 01:00:00';
---- TYPES
INT,BIGINT,TIMESTAMP
---- RESULTS
5,1320566400,2011-11-06 01:00:00
8,1320570000,2011-11-06 01:00:00
---- RUNTIME_PROFILE
aggregation(SUM, RowsRead): 2
====
---- QUERY
# Test that kudu greater predicate with timestamps can be correctly pushed down in the
# local time. '2011-11-06 01:30:00' in timezone America/Los_Angeles could be converted to
# 2011-11-06 08:30:00 or 09:30:00 in UTC, we should use the previous value 08:30:00 for
# greater compare to avoid missing rows, so the total RowsRead should be 4
# (2011-11-06 08:40:00, 09:00:00, 09:20:00 and 09:40:00 in UTC).
select * from timestamp_at_dst_changes where ts > '2011-11-06 01:30:00';
---- TYPES
INT,BIGINT,TIMESTAMP
---- RESULTS
7,1320568800,2011-11-06 01:40:00
10,1320572400,2011-11-06 01:40:00
---- RUNTIME_PROFILE
aggregation(SUM, RowsRead): 4
====
---- QUERY
# Test that kudu less predicate with timestamps can be correctly pushed down in the
# local time. for similar reasons of greater predicate, we should use the posterior value
# for less compare
select * from timestamp_at_dst_changes where ts < '2011-11-06 01:30:00';
---- TYPES
INT,BIGINT,TIMESTAMP
---- RESULTS
1,1300006800,2011-03-13 01:00:00
2,1300008600,2011-03-13 01:30:00
3,1300010400,2011-03-13 03:00:00
4,1300012200,2011-03-13 03:30:00
5,1320566400,2011-11-06 01:00:00
6,1320567600,2011-11-06 01:20:00
8,1320570000,2011-11-06 01:00:00
9,1320571200,2011-11-06 01:20:00
---- RUNTIME_PROFILE
aggregation(SUM, RowsRead): 9
====
---- QUERY
# Test that kudu inlist predicate with timestamps can be correctly pushed down in the
# local time. for similar reasons of equal predicate, we should remove from list for
# invalid timestamp and put both possible value in list for repeated timestamp.
select * from timestamp_at_dst_changes where ts in
  ('2011-03-13 02:00:00', '2011-11-06 01:00:00');
---- TYPES
INT,BIGINT,TIMESTAMP
---- RESULTS
5,1320566400,2011-11-06 01:00:00
8,1320570000,2011-11-06 01:00:00
---- RUNTIME_PROFILE
aggregation(SUM, RowsRead): 2
====
