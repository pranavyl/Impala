====
---- QUERY
use tpch_nested_parquet
====
---- QUERY
# IMPALA-2289: Test proper handling of AtCapacity() inside the subplan node.
# num_nodes is set to 1 in the python test to make it very likely to hit the once buggy
# code path because a single scan node instance must process all input files.
select c_custkey, o_orderkey
from customer c left outer join c.c_orders
where c_custkey = 67974;
---- RESULTS
67974,NULL
---- TYPES
bigint,bigint
---- RUNTIME_PROFILE
row_regex: .*NUM_NODES=1.*
====
---- QUERY
# Regression test for IMPALA-11200
select c_custkey, v.* from customer c,
  (select o_orderpriority, count(o_orderkey) c
   from c.c_orders
   group by o_orderpriority) v
where c_custkey < 4;
---- RESULTS
2,'2-HIGH',1
2,'4-NOT SPECIFIED',2
2,'1-URGENT',4
1,'2-HIGH',1
1,'5-LOW',2
1,'1-URGENT',2
1,'3-MEDIUM',1
---- TYPES
BIGINT,STRING,BIGINT
---- RUNTIME_PROFILE
!row_regex: .*Codegen Enabled, Codegen Enabled.*
====
---- QUERY
# Regression test for IMPALA-12204
select c1.c_custkey, v.o_orderkey from
  customer c1, customer c2,
  (select x.* from c1.c_orders x, c2.c_orders y
  where x.o_orderkey = y.o_orderkey) v
where c1.c_custkey = c2.c_custkey
  and c1.c_custkey < 4;
---- RESULTS
1,579908
1,4273923
1,454791
1,4808192
1,3868359
1,5133509
2,1763205
2,1842406
2,1374019
2,430243
2,1071617
2,3986496
2,2992930
---- TYPES
BIGINT,BIGINT
---- RUNTIME_PROFILE
!row_regex: .*Build Side Codegen Enabled, Hash Table Construction Codegen Enabled, Build Side Codegen Enabled, Hash Table Construction Codegen Enabled.*
====
---- QUERY
# Regression test for IMPALA-12204
select count(*) from customer c,
  (select o_orderkey from c.c_orders
   union all select 100) v
where c_custkey < 4
---- RESULTS
16
---- TYPES
BIGINT
---- RUNTIME_PROFILE
!row_regex: .*Codegen Disabled for const scalar expressions, Codegen Disabled for const scalar expressions.*
====
