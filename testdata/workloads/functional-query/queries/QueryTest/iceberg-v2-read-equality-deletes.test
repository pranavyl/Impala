====
---- QUERY
# We don't use time-travel, so we plan the query from cached metadata.
select * from functional_parquet.iceberg_v2_delete_equality;
---- RESULTS
1,'test_1_base'
2,'test_2_updated'
---- TYPES
BIGINT,STRING
====
---- QUERY
# Use time-travel based on snapshot id.
select * from functional_parquet.iceberg_v2_delete_equality for system_version as of 5763349507283783091;
---- RESULTS
1,'test_1_base'
2,'test_2_updated'
---- TYPES
BIGINT,STRING
====
---- QUERY
# Use time-travel based on timestamp.
select * from functional_parquet.iceberg_v2_delete_equality for system_time as of now();
---- RESULTS
1,'test_1_base'
2,'test_2_updated'
---- TYPES
BIGINT,STRING
====
---- QUERY
# Equality delete file with data sequance number 2 contains (NULL), (3). Drops the
# matching values with lower data sequence number, while keeps the one with higher seq
# nums.
select *, ICEBERG__DATA__SEQUENCE__NUMBER from functional_parquet.iceberg_v2_delete_equality_nulls;
---- RESULTS
1,'str1',1
4,'str4',3
NULL,'str5',3
---- TYPES
INT,STRING,BIGINT
====
---- QUERY
# Check that the NULL value was present in the first snapshot of the table.
select *, ICEBERG__DATA__SEQUENCE__NUMBER from functional_parquet.iceberg_v2_delete_equality_nulls
for system_version as of 4346796256488077976;
---- RESULTS
1,'str1',1
NULL,'str2',1
3,'str3',1
---- TYPES
INT,STRING,BIGINT
====
---- QUERY
# Query a table that has both equality and positional delete files.
select * from functional_parquet.iceberg_v2_delete_both_eq_and_pos;
---- RESULTS
2,'str2_updated',2023-12-13
3,'str3',2023-12-23
---- TYPES
INT,STRING,DATE
====
---- QUERY
# Query a partitioned table that has eq-delete files in both partitions.
select * from functional_parquet.iceberg_v2_delete_equality_partitioned order by d, s;
---- RESULTS
1,'str1',2023-12-24
2,'str2',2023-12-24
333333,'str3',2023-12-24
4,'str4',2023-12-24
1,'str1',2023-12-25
222,'str2',2023-12-25
---- TYPES
INT,STRING,DATE
====
---- QUERY
# There are equality deletes with different equality field ids.
select * from functional_parquet.iceberg_v2_delete_equality_multi_eq_ids;
---- RESULTS
1,'str1'
2222,'str2'
33,'str3_updated_twice'
4,'str4_updated'
5,'str5'
---- TYPES
INT,STRING
====
---- QUERY
# Similar as above, but do a time travel to the latest snapshot so that we can exercise a
# different code path.
select * from functional_parquet.iceberg_v2_delete_equality_multi_eq_ids
  for system_version as of 4077234998626563290;
---- RESULTS
1,'str1'
2222,'str2'
33,'str3_updated_twice'
4,'str4_updated'
5,'str5'
---- TYPES
INT,STRING
====
---- QUERY
# Do a time travel to have a single equality field id list.
select * from functional_parquet.iceberg_v2_delete_equality_multi_eq_ids
  for system_version as of 8127619959873391049;
---- RESULTS
1,'str1'
2,'str2'
3,'str3_updated'
---- TYPES
INT,STRING
====
---- QUERY
# The table has both equality and positional delete files where some of the equality
# delete files have different equality field ids.
select * from functional_parquet.iceberg_v2_delete_pos_and_multi_eq_ids;
---- RESULTS
1,'str1',2020-12-01
333333,'str3',2024-01-25
4,'str4',2024-01-26
5,'str5',2024-01-27
---- TYPES
INT,STRING,DATE
====
---- QUERY
# Similar as above, but do a time travel to the latest snapshot so that we can exercise a
# different code path.
select * from functional_parquet.iceberg_v2_delete_pos_and_multi_eq_ids
  for system_version as of 152862018760071153;
---- RESULTS
1,'str1',2020-12-01
333333,'str3',2024-01-25
4,'str4',2024-01-26
5,'str5',2024-01-27
---- TYPES
INT,STRING,DATE
====
---- QUERY
# Query an Iceberg table with primary keys that has schema evolution and equality
# deletes. Note, the schema evolution didn't touch the primary keys
# (identifier-field-ids).
select * from functional_parquet.iceberg_v2_equality_delete_schema_evolution;
---- RESULTS
1,2024-03-20,'str1',NULL
44,2024-03-21,'str4',4444
5,2024-03-22,'str5',NULL
---- TYPES
INT,DATE,STRING,INT
====
---- QUERY
# Time travel before the schema evolution was done on the table.
select * from functional_parquet.iceberg_v2_equality_delete_schema_evolution
for system_version as of 3986738438831924669;
---- RESULTS
1,2024-03-20,'str1'
4,2024-03-21,'str4'
5,2024-03-22,'str5'
---- TYPES
INT,DATE,STRING
====
